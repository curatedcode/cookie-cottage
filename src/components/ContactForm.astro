---
import { getButtonClass } from "./Button/getButtonClass";
---

<div x-data="contactForm" class="relative w-full">
	<template x-if="!submitted">
		<form @submit.prevent="handleSubmit" class="space-y-6" x-transition.opacity>
			<div class="grid grid-cols-1 md:grid-cols-2 gap-6">
				<div>
					<label for="name" class="block font-medium mb-1">Name</label>
					<input
						type="text"
						id="name"
						name="name"
						x-model="formData.name"
						class="w-full px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
						required
					/>
				</div>

				<div>
					<label for="email" class="block font-medium mb-1">Email</label>
					<input
						type="email"
						id="email"
						name="email"
						x-model="formData.email"
						class="w-full px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
						required
					/>
				</div>

				<div>
					<label for="phone" class="block font-medium mb-1">Phone</label>
					<input
						type="tel"
						id="phone"
						name="phone"
						x-model="formData.phone"
						class="w-full px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
					/>
				</div>

				<div>
					<label for="orderType" class="block font-medium mb-1"
						>Order Type</label
					>
					<select
						id="orderType"
						name="orderType"
						x-model="formData.orderType"
						class="w-full px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
					>
						<option value="cookies">Cookies</option>
						<option value="cupcakes">Cupcakes</option>
						<option value="custom-order">Custom Order</option>
						<option value="party-booking">Party Booking</option>
						<option value="other">Other</option>
					</select>
				</div>

				<div>
					<label for="date" class="block font-medium mb-1">Desired Date</label>
					<input
						type="date"
						id="date"
						name="date"
						x-model="formData.date"
						class="w-full px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
					/>
				</div>
			</div>

			<div>
				<label for="message" class="block font-medium mb-1"
					>Order Details / Message</label
				>
				<textarea
					id="message"
					name="message"
					x-model="formData.message"
					rows="5"
					class="w-full resize-none px-4 py-2 border border-gray-5 rounded-lg focus:border-custom-brown transition-colors"
					required></textarea>
			</div>

			<button type="submit" class=`${getButtonClass({variant: "solid"})} w-full`
				>Submit Order Request</button
			>
		</form>
	</template>

	<template x-if="submitted">
		<div
			class="text-center p-6 bg-green-100 border border-green-300 rounded-lg shadow-md text-green-800"
			x-transition:enter="transition ease-out duration-500"
			x-transition:enter-start="opacity-0 translate-y-4"
			x-transition:enter-end="opacity-100 translate-y-0"
		>
			<h2 class="text-2xl font-semibold mb-2">Order Request Submitted!</h2>
			<p>Weâ€™ll contact you shortly to confirm your order details.</p>
		</div>
	</template>
</div>

<script>
	import Alpine from "alpinejs";

	document.addEventListener("alpine:init", () => {
		Alpine.data("contactForm", () => ({
			submitted: false,
			formData: {
				name: "",
				email: "",
				phone: "",
				orderType: "cookies",
				message: "",
				date: "",
			},
			handleSubmit() {
				console.log("Form submitted:", this.formData);

				this.submitted = true;

				this.formData = {
					name: "",
					email: "",
					phone: "",
					orderType: "cookies",
					message: "",
					date: "",
				};

				setTimeout(() => (this.submitted = false), 10_000);
			},
		}));
	});
</script>
